//
// File generated by /cvmfs/cms.cern.ch/slc5_amd64_gcc462/lcg/root/5.32.00-cms21/bin/rootcint at Wed Feb 17 20:05:22 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIuscms_datadId3dIsdurgutdIRESEARCHdICMSSW_5_3_7_patch5dIsrcdIAnalysisdIFourMuonPATdItestdIAnalysisFinaldIEvtMixingdIAutoDict_vector_TLorentzVector__cxx_ACLiC_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AutoDict_vector_TLorentzVector__cxx_ACLiC_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator_Dictionary();
   static void *new_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(void *p = 0);
   static void *newArray_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(Long_t size, void *p);
   static void delete_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(void *p);
   static void deleteArray_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(void *p);
   static void destruct_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::vector<TLorentzVector,allocator<TLorentzVector> >::iterator*)
   {
      ::vector<TLorentzVector,allocator<TLorentzVector> >::iterator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::vector<TLorentzVector,allocator<TLorentzVector> >::iterator),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TLorentzVector,allocator<TLorentzVector> >::iterator", "/cvmfs/cms.cern.ch/slc5_amd64_gcc462/lcg/root/5.32.00-cms21/cint/cint/lib/prec_stl/vector", 218,
                  typeid(::vector<TLorentzVector,allocator<TLorentzVector> >::iterator), DefineBehavior(ptr, ptr),
                  0, &vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator_Dictionary, isa_proxy, 0,
                  sizeof(::vector<TLorentzVector,allocator<TLorentzVector> >::iterator) );
      instance.SetNew(&new_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator);
      instance.SetNewArray(&newArray_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator);
      instance.SetDelete(&delete_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator);
      instance.SetDeleteArray(&deleteArray_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator);
      instance.SetDestructor(&destruct_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::vector<TLorentzVector,allocator<TLorentzVector> >::iterator*)
   {
      return GenerateInitInstanceLocal((::vector<TLorentzVector,allocator<TLorentzVector> >::iterator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vector<TLorentzVector,allocator<TLorentzVector> >::iterator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::vector<TLorentzVector,allocator<TLorentzVector> >::iterator*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::vector<TLorentzVector,allocator<TLorentzVector> >::iterator : new ::vector<TLorentzVector,allocator<TLorentzVector> >::iterator;
   }
   static void *newArray_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::vector<TLorentzVector,allocator<TLorentzVector> >::iterator[nElements] : new ::vector<TLorentzVector,allocator<TLorentzVector> >::iterator[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(void *p) {
      delete ((::vector<TLorentzVector,allocator<TLorentzVector> >::iterator*)p);
   }
   static void deleteArray_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(void *p) {
      delete [] ((::vector<TLorentzVector,allocator<TLorentzVector> >::iterator*)p);
   }
   static void destruct_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(void *p) {
      typedef ::vector<TLorentzVector,allocator<TLorentzVector> >::iterator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::vector<TLorentzVector,allocator<TLorentzVector> >::iterator

namespace ROOT {
   void vectorlETLorentzVectorgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETLorentzVectorgR_Dictionary();
   static void *new_vectorlETLorentzVectorgR(void *p = 0);
   static void *newArray_vectorlETLorentzVectorgR(Long_t size, void *p);
   static void delete_vectorlETLorentzVectorgR(void *p);
   static void deleteArray_vectorlETLorentzVectorgR(void *p);
   static void destruct_vectorlETLorentzVectorgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TLorentzVector>*)
   {
      vector<TLorentzVector> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TLorentzVector>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TLorentzVector>", -2, "/cvmfs/cms.cern.ch/slc5_amd64_gcc462/lcg/root/5.32.00-cms21/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TLorentzVector>), DefineBehavior(ptr, ptr),
                  0, &vectorlETLorentzVectorgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TLorentzVector>) );
      instance.SetNew(&new_vectorlETLorentzVectorgR);
      instance.SetNewArray(&newArray_vectorlETLorentzVectorgR);
      instance.SetDelete(&delete_vectorlETLorentzVectorgR);
      instance.SetDeleteArray(&deleteArray_vectorlETLorentzVectorgR);
      instance.SetDestructor(&destruct_vectorlETLorentzVectorgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TLorentzVector> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETLorentzVectorgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETLorentzVectorgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector> : new vector<TLorentzVector>;
   }
   static void *newArray_vectorlETLorentzVectorgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector>[nElements] : new vector<TLorentzVector>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETLorentzVectorgR(void *p) {
      delete ((vector<TLorentzVector>*)p);
   }
   static void deleteArray_vectorlETLorentzVectorgR(void *p) {
      delete [] ((vector<TLorentzVector>*)p);
   }
   static void destruct_vectorlETLorentzVectorgR(void *p) {
      typedef vector<TLorentzVector> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TLorentzVector>

/********************************************************
* /uscms_data/d3/sdurgut/RESEARCH/CMSSW_5_3_7_patch5/src/Analysis/FourMuonPAT/test/AnalysisFinal/EvtMixing/AutoDict_vector_TLorentzVector__cxx_ACLiC_dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAutoDict_vector_TLorentzVector__cxx_ACLiC_dict();

extern "C" void G__set_cpp_environmentAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() {
  G__cpp_reset_tagtableAutoDict_vector_TLorentzVector__cxx_ACLiC_dict();
}
#include <new>
extern "C" int G__cpp_dllrevAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* vector<TLorentzVector,allocator<TLorentzVector> > */
static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::reference obj = ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->at((vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector,allocator<TLorentzVector> >::const_reference obj = ((const vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->at((vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator* pobj;
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator xobj = ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->begin();
         pobj = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator* pobj;
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator xobj = ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->end();
         pobj = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator* pobj;
         vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator xobj = ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator* pobj;
         vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator xobj = ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->rend();
         pobj = new vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->resize((vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->resize((vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[0]), *((TLorentzVector*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::reference obj = ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->operator[]((vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector,allocator<TLorentzVector> >::const_reference obj = ((const vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->operator[]((vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TLorentzVector,allocator<TLorentzVector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TLorentzVector,allocator<TLorentzVector> >[n];
     } else {
       p = new((void*) gvp) vector<TLorentzVector,allocator<TLorentzVector> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TLorentzVector,allocator<TLorentzVector> >;
     } else {
       p = new((void*) gvp) vector<TLorentzVector,allocator<TLorentzVector> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TLorentzVector,allocator<TLorentzVector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TLorentzVector,allocator<TLorentzVector> >((vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[0]), *(TLorentzVector*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<TLorentzVector,allocator<TLorentzVector> >((vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[0]), *(TLorentzVector*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TLorentzVector,allocator<TLorentzVector> >((vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TLorentzVector,allocator<TLorentzVector> >((vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TLorentzVector,allocator<TLorentzVector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TLorentzVector,allocator<TLorentzVector> >(*(vector<TLorentzVector,allocator<TLorentzVector> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TLorentzVector,allocator<TLorentzVector> >(*(vector<TLorentzVector,allocator<TLorentzVector> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TLorentzVector,allocator<TLorentzVector> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TLorentzVector,allocator<TLorentzVector> >(*((vector<TLorentzVector,allocator<TLorentzVector> >::const_iterator*) G__int(libp->para[0])), *((vector<TLorentzVector,allocator<TLorentzVector> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TLorentzVector,allocator<TLorentzVector> >(*((vector<TLorentzVector,allocator<TLorentzVector> >::const_iterator*) G__int(libp->para[0])), *((vector<TLorentzVector,allocator<TLorentzVector> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >& obj = ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->operator=(*(vector<TLorentzVector,allocator<TLorentzVector> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->reserve((vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->push_back(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->swap(*(vector<TLorentzVector,allocator<TLorentzVector> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator* pobj;
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator xobj = ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->insert(*((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__int(libp->para[0])), *(TLorentzVector*) libp->para[1].ref);
         pobj = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->insert(*((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__int(libp->para[0])), *((vector<TLorentzVector,allocator<TLorentzVector> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TLorentzVector,allocator<TLorentzVector> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->insert(*((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__int(libp->para[0])), (vector<TLorentzVector,allocator<TLorentzVector> >::size_type) G__int(libp->para[1])
, *(TLorentzVector*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->erase(*((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->erase(*((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__int(libp->para[0])), *((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TLorentzVector,allocator<TLorentzVector> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TLorentzVector,allocator<TLorentzVector> > G__TvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR;
static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TLorentzVector,allocator<TLorentzVector> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TLorentzVector,allocator<TLorentzVector> >*) (soff+(sizeof(vector<TLorentzVector,allocator<TLorentzVector> >)*i)))->~G__TvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TLorentzVector,allocator<TLorentzVector> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TLorentzVector,allocator<TLorentzVector> >*) (soff))->~G__TvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TLorentzVector,allocator<TLorentzVector> >::iterator */
static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TLorentzVector,allocator<TLorentzVector> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator[n];
     } else {
       p = new((void*) gvp) vector<TLorentzVector,allocator<TLorentzVector> >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator;
     } else {
       p = new((void*) gvp) vector<TLorentzVector,allocator<TLorentzVector> >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TLorentzVector,allocator<TLorentzVector> >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator(libp->para[0].ref ? *(const vector<TLorentzVector,allocator<TLorentzVector> >::iterator::pointer*) libp->para[0].ref : *(const vector<TLorentzVector,allocator<TLorentzVector> >::iterator::pointer*) (void*) (&G__Mlong(libp->para[0])));
   } else {
     p = new((void*) gvp) vector<TLorentzVector,allocator<TLorentzVector> >::iterator(libp->para[0].ref ? *(const vector<TLorentzVector,allocator<TLorentzVector> >::iterator::pointer*) libp->para[0].ref : *(const vector<TLorentzVector,allocator<TLorentzVector> >::iterator::pointer*) (void*) (&G__Mlong(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator::reference obj = ((const vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator& obj = ((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator* pobj;
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator xobj = ((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator& obj = ((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator* pobj;
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator xobj = ((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator::reference obj = ((const vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator[](*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator& obj = ((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator+=(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator* pobj;
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator xobj = ((const vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator+(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator& obj = ((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator-=(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator* pobj;
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator xobj = ((const vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator-(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator::difference_type*) G__Longref(&libp->para[0]));
         pobj = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator::pointer& obj = ((const vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->base();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator* pobj;
         vector<TLorentzVector,allocator<TLorentzVector> >::iterator xobj = ((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) G__getstructoffset())->operator=(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[0].ref);
         pobj = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vector<TLorentzVector,allocator<TLorentzVector> >::iterator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TLorentzVector,allocator<TLorentzVector> >::iterator G__TvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator;
static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) (soff+(sizeof(vector<TLorentzVector,allocator<TLorentzVector> >::iterator)*i)))->~G__TvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) (soff))->~G__TvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1427(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[0].ref, *(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1428(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[0].ref, *(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1429(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[0].ref, *(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1430(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[0].ref, *(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1431(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator<=(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[0].ref, *(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1432(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator>=(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[0].ref, *(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1433(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) operator-(*(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[0].ref, *(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1434(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator* pobj;
         const vector<TLorentzVector,allocator<TLorentzVector> >::iterator xobj = operator+((const vector<TLorentzVector,allocator<TLorentzVector> >::iterator::difference_type) G__int(libp->para[0]), *(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*) libp->para[1].ref);
         pobj = new vector<TLorentzVector,allocator<TLorentzVector> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1435(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator*) libp->para[0].ref, *(vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1436(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator*) libp->para[0].ref, *(vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* vector<TLorentzVector,allocator<TLorentzVector> > */

/* vector<TLorentzVector,allocator<TLorentzVector> >::iterator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAutoDict_vector_TLorentzVector__cxx_ACLiC_dict {
 public:
  G__Sizep2memfuncAutoDict_vector_TLorentzVector__cxx_ACLiC_dict(): p(&G__Sizep2memfuncAutoDict_vector_TLorentzVector__cxx_ACLiC_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAutoDict_vector_TLorentzVector__cxx_ACLiC_dict::*p)();
};

size_t G__get_sizep2memfuncAutoDict_vector_TLorentzVector__cxx_ACLiC_dict()
{
  G__Sizep2memfuncAutoDict_vector_TLorentzVector__cxx_ACLiC_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TLorentzVector>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector),256,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector),1,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector),257,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector),1,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector),1,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* vector<TLorentzVector,allocator<TLorentzVector> > */
static void G__setup_memvarvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   { vector<TLorentzVector,allocator<TLorentzVector> > *p; p=(vector<TLorentzVector,allocator<TLorentzVector> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<TLorentzVector,allocator<TLorentzVector> >::iterator */
static void G__setup_memvarvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator));
   { vector<TLorentzVector,allocator<TLorentzVector> >::iterator *p; p=(vector<TLorentzVector,allocator<TLorentzVector> >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR(void) {
   /* vector<TLorentzVector,allocator<TLorentzVector> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__memfunc_setup("at",213,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_1, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector), G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TLorentzVector,allocator<TLorentzVector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_2, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector), G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TLorentzVector,allocator<TLorentzVector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_3, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_4, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_5, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR), G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_6, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR), G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_7, 107, -1, G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_8, 107, -1, G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TLorentzVector,allocator<TLorentzVector> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TLorentzVector,allocator<TLorentzVector> >::size_type' 0 - sz u 'TLorentzVector' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_11, 107, -1, G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_13, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector), G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TLorentzVector,allocator<TLorentzVector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_14, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector), G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TLorentzVector,allocator<TLorentzVector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TLorentzVector,allocator<TLorentzVector> >",4862,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_15, 105, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TLorentzVector,allocator<TLorentzVector> >",4862,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_16, 105, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TLorentzVector,allocator<TLorentzVector> >::size_type' 0 - n u 'TLorentzVector' - 11 'TLorentzVector()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TLorentzVector,allocator<TLorentzVector> >",4862,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_17, 105, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TLorentzVector,allocator<TLorentzVector> >",4862,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_18, 105, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' 'vector<TLorentzVector,allocator<TLorentzVector> >::const_iterator' 10 - first u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' 'vector<TLorentzVector,allocator<TLorentzVector> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_19, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TLorentzVector,allocator<TLorentzVector> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_21, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_22, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_25, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 0 - position u 'TLorentzVector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 0 - position u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' 'vector<TLorentzVector,allocator<TLorentzVector> >::const_iterator' 10 - first "
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' 'vector<TLorentzVector,allocator<TLorentzVector> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 0 - position k - 'vector<TLorentzVector,allocator<TLorentzVector> >::size_type' 0 - n "
"u 'TLorentzVector' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 0 - first u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TLorentzVector,allocator<TLorentzVector> >", 4988, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3004_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator(void) {
   /* vector<TLorentzVector,allocator<TLorentzVector> >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_1, 105, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_2, 105, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 1, 5, 1, 0, "U 'TLorentzVector' 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator::pointer' 11 - __i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_3, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector), G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::iterator::reference"), 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_4, 85, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector), G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::iterator::pointer"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_5, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_6, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_7, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_8, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_9, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector), G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::iterator::reference"), 1, 1, 1, 1, 8, "l - 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_10, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_11, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_12, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "l - 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_13, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "l - 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator::difference_type' 11 - __n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_14, 85, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector), G__defined_typename("vector<TLorentzVector,allocator<TLorentzVector> >::iterator::pointer"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_15, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("iterator", 874, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_16, (int) ('i'), G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict_3005_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
   G__memfunc_setup("operator==", 998, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1427, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - x u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1428, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - x u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<", 936, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1429, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - x u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>", 938, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1430, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - x u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<=", 997, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1431, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - x u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>=", 999, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1432, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - x u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1433, 108, -1, G__defined_typename("difference_type"), 0, 2, 1, 1, 8, 
"u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - x u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1434, 117, G__get_linked_tagnum(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 8, 
"l - 'difference_type' 10 - x u 'vector<TLorentzVector,allocator<TLorentzVector> >::iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1435, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<TLorentzVector,allocator<TLorentzVector> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<TLorentzVector,allocator<TLorentzVector> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dict__0_1436, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'reverse_iterator<vector<TLorentzVector,allocator<TLorentzVector> >::iterator>' 'reverse_iterator' 11 - x u 'reverse_iterator<vector<TLorentzVector,allocator<TLorentzVector> >::iterator>' 'reverse_iterator' 11 - y", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR = { "vector<TLorentzVector,allocator<TLorentzVector> >" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator = { "vector<TLorentzVector,allocator<TLorentzVector> >::iterator" , 99 , -1 };
G__linked_taginfo G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TLorentzVector,allocator<TLorentzVector> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() {
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator.tagnum = -1 ;
  G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_TElementPosActionTlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),sizeof(vector<TLorentzVector,allocator<TLorentzVector> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR,G__setup_memfuncvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator),sizeof(vector<TLorentzVector,allocator<TLorentzVector> >::iterator),-1,35072,(char*)NULL,G__setup_memvarvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator,G__setup_memfuncvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__AutoDict_vector_TLorentzVector__cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupAutoDict_vector_TLorentzVector__cxx_ACLiC_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupAutoDict_vector_TLorentzVector__cxx_ACLiC_dict()");
  G__set_cpp_environmentAutoDict_vector_TLorentzVector__cxx_ACLiC_dict();
  G__cpp_setup_tagtableAutoDict_vector_TLorentzVector__cxx_ACLiC_dict();

  G__cpp_setup_inheritanceAutoDict_vector_TLorentzVector__cxx_ACLiC_dict();

  G__cpp_setup_typetableAutoDict_vector_TLorentzVector__cxx_ACLiC_dict();

  G__cpp_setup_memvarAutoDict_vector_TLorentzVector__cxx_ACLiC_dict();

  G__cpp_setup_memfuncAutoDict_vector_TLorentzVector__cxx_ACLiC_dict();
  G__cpp_setup_globalAutoDict_vector_TLorentzVector__cxx_ACLiC_dict();
  G__cpp_setup_funcAutoDict_vector_TLorentzVector__cxx_ACLiC_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAutoDict_vector_TLorentzVector__cxx_ACLiC_dict();
  return;
}
class G__cpp_setup_initAutoDict_vector_TLorentzVector__cxx_ACLiC_dict {
  public:
    G__cpp_setup_initAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() { G__add_setup_func("AutoDict_vector_TLorentzVector__cxx_ACLiC_dict",(G__incsetup)(&G__cpp_setupAutoDict_vector_TLorentzVector__cxx_ACLiC_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAutoDict_vector_TLorentzVector__cxx_ACLiC_dict() { G__remove_setup_func("AutoDict_vector_TLorentzVector__cxx_ACLiC_dict"); }
};
G__cpp_setup_initAutoDict_vector_TLorentzVector__cxx_ACLiC_dict G__cpp_setup_initializerAutoDict_vector_TLorentzVector__cxx_ACLiC_dict;

